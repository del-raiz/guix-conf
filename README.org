#+TITLE: GNU Guix - System & Home StumpWM Configuration
#+subtitle: =(defmacro guix-craft (system home &rest body) ...)
#+author: Erik Pablo Almaraz (logoraz)
#+email: erikalmaraz@fastmail.com
:args:
#+language: en
#+options: ':t toc:nil author:t email:t num:t
#+startup: content indent
#+macro: latest-export-date '(eval (format-time-string "%F %T %z"))'
:end:

* Guix+StumpWM Configuration

  [[file:./assets/home-desktop.png]]

  [[file:./assets/nyxt-desktop-2.png]]


  My personal Guix System & Home StumpWM Configuration!

  I am currently configuring Guix SD for Clasp Common Lisp and Guile Scheme
  development.

  The config directory comprises of those applications/frameworks which I have
  personaly setup (and not all my 'dot files' are therein).
  Currently using a shell script to deploy, but am working on setting up a
  full Guix deployment, however, maintaining original source code rather
  than writting it in Guile as some do.

  This is specifically setup and trailed with my Lenovo ThinkPad X1 Carbon 4th Gen
  (Type 20FB) Laptop.

  Git Repositories:

  - GitHub: https://github.com/logoraz/guix-craft.git


** System Configuration Outline (=system.scm=)

 Define system-level services & packages:

 - 1. =%system-services=
   - Set OpenSSH service
   - =guix-home-service-type= -> (TODO would like to handle both concurrently)
   - Modify =%desktop-services= to utilize substitutes where possible
     as opposed to compiling everything...
     See: https://git.savannah.gnu.org/cgit/guix.git/tree/gnu?h=v1.4.0

- 2. =%stumpwm-packages=
  Prefer to keep the WM at the system level to configure basic services and to have
  them available system wide, home can configure StumpWM however you like.
  - =sbcl=
  - =stumpwm-with-slynk=

** Home Configuration Outline (=home.scm=)

 Define user-level services & packages:

 - 1. =%logoraz-packages= -> My everyday packages (i.e. fonts, web, apps, tools)
 - 2. =%dev-packages= -> Guile/Common Lisp packages I use consistently
 - 3. =%xorg-util-packages= -> X11 packages needed for StumpWM
 - 4. =%stumpwm-packages= -> For StumpWM configuration/customization
 - 4. =%emacs-packages= -> Use Guix to setup Emacs (it's all there!)
 - 5. =services= -> wip (need to modularize to separate variable definitions)
   - =home-environment-variables-service-type=
   - =home-dbus-service-type=
   - =home-pipewire-service-type=
   - =home-bash-service-type=
   - TODO: Implement =home-xdg-configuration-files-service-type=
   - TODO: Implment =home-files-service-type=
   - TODO: Modularize services, i.e. define list outside =home-environment= in variable.

** Installation

*** Live Image/ISO

 I specifically used the guix-installer, but next time my give the =guix-live-image=
 a try... best to have both present for reference:

 1. https://github.com/SystemCrafters/guix-installer/releases/tag/v202308290335

 2. https://github.com/SystemCrafters/guix-live-image

*** Create usb installation media

For a quick reference on how to create usb installation media:

- List information about block devices (i.e. see what disks you have and find
  your usb)

#+begin_src sh

  $ lsblk

#+end_src

- Create your usb installation media (note: =sdX -> sdb= for me)

#+begin_src sh

  $ sudo dd if=guix-installer-<date number>.iso of=/dev/sdX status=progress=

#+end_src

*** Graphical Installer Procedure

Followed =SystemCrafters= prescription for installation:

- https://systemcrafters.net/craft-your-system-with-guix/full-system-install/

** Deploy

*** Initial setup/deployment (WIP)

Plan is to configure Home services to deloy, i.e create all necessary locations
and copy configs to their proper locations -> still working on refining this to
follow the =Guix Way=.

#+begin_src sh

  # Get guix home setup
  mkdir ~/repos/
  cd ~/repos
  git clone https://github.com/del-raiz/guix-craft.git
  cd guix-craft/
  # Copy channels.scm to ~/.config/guix
  cp ./channels.scm ~/.config/guix/
  # You can delete you channels.scm and system.scm in /etc/ if still there...
  # that is the default location where they are stored, note that Guix checks
  # ~/.config/guix for channels.scm and if it doesn't exits, it defaults to
  # /etc/channels.scm.

  guix pull
  guix pull --delete-generations
  sudo -E guix system reconfigure system.scm
  sudo guix system delete-generations
  guix home reconfigure home.scm
  guix home delete-generations
  guix upgrade
  guix package --delete-generations
  guix gc
  # guix gc -d1w # delete generations older than 1 week
  df -h

  # Deploy the configuration to ~/.config/
  # Use the deployment scripts in each config module:

  # Setup Guix files
  ./config/guix/deploy-guix.sh

  # Setup StumpWM config files
  ./config/stumpwm/deploy-stumpwm.sh

  # Setup X11 (Xorg) environment files for StumpWM
  ./config/xorg/deploy-xorg.sh

  # Setup Emacs config files
  ./config/emacs/deploy-emacs.sh

  # Setup Nyxt config files
  ./config/nyxt/deploy-nyxt.sh

  # Setup Common Lisp Environment (quicklisp, FFI (WIP), etc.)
  ./config/common-lisp/deploy-cl.sh

#+end_src

*** Connecting to Wifi via CLI

Don't have yet a GUI for managing wifi connections in my StumpWM setup, so
typically connect via command line, and so putting here as a reminder to myself:

#+begin_src sh

  # List Wifi networks available
  $ sudo nmcli device wifi list

  # Connect to ESSID
  $ sudo nmcli device wifi connect <ESSID> password <network-password>

#+end_src

List known connections and delete them from list in Network Manager.

#+begin_src sh

  # Get ESSID (name) or UUID of connection to delete
  $ sudo nmcli connection show

  # Delete connection via ID (aka name or ESSID)
  $ sudo nmcli connection delete <ESSID>

#+end_src

** Common Lisp Stuff

*** Installing Lem

I created a Guix package recipe for Lem, which can be found [[https://github.com/logoraz/lem-guix-package-recipe][here]], clone and install with
Guix via:

#+begin_src sh

  $ guix package -f path/to/lem-guix-packaging/package.scm

#+end_src

*Note:* I no longer plan to contribute to Lem due to their distasteful ethics towards
Common Lisp newcomers and Guix users. A few rude, pompous contributors to the
project and their interactions with me on DM's is what lead to this... Not sure if I will update this package recipe any longer knowing it will contribute to that negative
social environment.


* StumpWM Configuration

*** WIP


* References


1. Guix System Installation & Home Configurations:

   - https://systemcrafters.net/craft-your-system-with-guix/full-system-install/

   - https://github.com/iambumblehead/guix-home

2. StumpWM Configurations & Hacks:

    - https://config.phundrak.com/stumpwm

    - https://mail.gnu.org/archive/html/bug-guix/2023-04/msg00227.html

3. Nyxt Configuration

   - https://nyxt.atlas.engineer/documentation

   - https://www.youtube.com/@nyxt-browser

4. Emacs & Guix

    - https://www.youtube.com/@systemcrafters

5. Xorg Response Lag solution

    - https://gitlab.com/nonguix/nonguix/-/issues/212

